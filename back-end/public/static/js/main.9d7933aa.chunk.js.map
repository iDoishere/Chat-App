{"version":3,"sources":["Components/LightBox/LightBox.js","Container/Login/Login.js","Components/SingleUser/SingleUser.js","Components/OnlineList/OnlineList.js","Components/ModalUsers/ModalUsers.js","Container/Chat/Chat.js","Container/MainApp/PostData.js","Container/Register/Register.js","Components/NavBar/NavBar.js","Container/MainApp/MainApp.js","App.js","serviceWorker.js","index.js","Events.js"],"names":["LightBox","_ref","allinfo","bannerClass","color","react_default","a","createElement","show","className","msgToUser","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","serverUrl","window","location","origin","loginUser","user","name","password","url","auth","concat","btoa","fetch","method","headers","Headers","Authorization","then","res","json","autorized","userLoggedIn","catch","err","displayLightBox","getPass","event","setState","target","value","getName","banner","bannerTimeOut","setTimeout","state","ifUserLoggedIn","clearTimeout","_this2","mdbreact_esm","md","icon","onChange","label","group","type","validate","error","success","outline","onClick","User","Components_LightBox_LightBox","Component","SingleUser","userName","ListGroupItem","OnlineList","onlineUsers","console","log","ListGroup","map","index","SingleUser_SingleUser","key","ModalUsers","modal","_this$props","openModal","toggle","Modal","isOpen","ModalHeader","ModalBody","OnlineList_OnlineList","ModalFooter","Chat1","endpoint","componentDidMount","socket","socketIOClient","joinChat","on","data","arr","toConsumableArray","messages","Message","author","timestamp","Date","text","push","addNewMessage","obj","assign","message","emit","localStorage","getItem","id","Math","random","toString","split","bind","assertThisInitialized","close","ModalUsers_ModalUsers","main","onMessageSend","placeholder","PostDataToMongo","_x","_x2","_PostDataToMongo","apply","arguments","_callee","mainInfo","regenerator_default","wrap","_context","prev","next","abrupt","body","JSON","stringify","Content-Type","response","stop","Register","React","createRef","pass","rePass","clickedRegister","asyncToGenerator","mark","resultRegsiter","sent","info","Events","ref","current","innerValue","gradient","rounded","NavBar","userLoggedOut","openModalBtn","usersLength","linkName","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","react_router_dom","to","MainApp","_this$state","setItem","numOfUers","removeItem","box","defineProperty","length","_this3","Components_NavBar_NavBar","react_router","path","exact","render","Container_Register_Register","Chat_Chat","displayLength","Container_Login_Login","App","Container_MainApp_MainApp","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","MSG","LOGIN","MISSING_INPUT","PASSWORD_LENGTH","PASSWORD_MATCH","USER_EXITS","YOURE_IN","FALSE"],"mappings":"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","file":"static/js/main.9d7933aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './LightBox.css'\r\n \r\n\r\nconst LightBox = ({allinfo}) => {\r\n\r\n  const bannerClass = allinfo.color === '0' ? \"warning\" : \"success\"; \r\n\r\n    return(\r\n    <div>\r\n      {  allinfo.show ?    \r\n      <div  className={bannerClass +\" banner\"}>\r\n           <h4>{allinfo.msgToUser}</h4>\r\n        </div>\r\n      : null\r\n             \r\n      }\r\n    </div>   \r\n    )\r\n}\r\nexport default  LightBox ;\r\n","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBIcon, MDBCardHeader, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport './Login.css'\r\nimport LightBox from '../../Components/LightBox/LightBox'\r\n\r\nclass Login extends Component {\r\n    serverUrl   = window.location.origin;\r\n // serverUrl = 'http://localhost:8080';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      password: \"\",\r\n      name: \"\",\r\n      ifUserLoggedIn: false,\r\n      banner: {\r\n        show: false, msgToUser: \"\", color: ''\r\n      },\r\n    };\r\n\r\n  }\r\n  // user pressed login \r\n  loginUser = (user) => {\r\n    if (user.name === \"\" || user.password === \"\") {\r\n      this.displayLightBox(\"please fill in all fields\", '0');\r\n      return;\r\n    }\r\n\r\n    const url = this.serverUrl + \"/users/login\";\r\n    const auth = `Basic ${btoa(`${user.name}:${user.password}`)}`;\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: new Headers({\r\n        Authorization: auth\r\n      })\r\n    }).then(res => res.json())\r\n      .then(res => {\r\n        if (res.autorized) {\r\n          this.props.userLoggedIn(user.name) // func in main app ..user will transfer to chat page\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.displayLightBox(\"failed to login\", '0');\r\n      });\r\n  }\r\n\r\n  getPass = (event) => {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n\r\n  getName = (event) => {\r\n    this.setState({ name: event.target.value })\r\n  }\r\n  // display error \\ warning to user\r\n  displayLightBox = (msgToUser, color) => {\r\n    const banner = { show: true, msgToUser, color };\r\n    this.setState({ banner });\r\n    this.bannerTimeOut = setTimeout(() => {\r\n      const banner = { show: false, msgToUser: \"\", color: null };\r\n      this.setState({ banner })\r\n    }, 3000);\r\n  }\r\n\r\n  //clear timeout as page die \r\n  componentWillUnmount() {\r\n    clearTimeout(this.bannerTimeOut);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <MDBContainer>\r\n          <MDBRow className=\"divLogin\">\r\n            <MDBCol md=\"6\">\r\n              <MDBCard>\r\n                <MDBCardBody>\r\n                  <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\r\n                    <h3 className=\"my-3\">\r\n                      <MDBIcon icon=\"lock\" /> Login:\r\n                </h3>\r\n                  </MDBCardHeader>\r\n                  <form>\r\n                    <div className=\"grey-text\">\r\n                      <MDBInput onChange={this.getName}\r\n                        label=\"Type your name\"\r\n                        icon=\"envelope\"\r\n                        group\r\n                        type=\"text\"\r\n                        validate\r\n                        error=\"wrong\"\r\n                        success=\"right\"\r\n                      />\r\n                      <MDBInput onChange={this.getPass}\r\n                        label=\"Type your password\"\r\n                        icon=\"lock\"\r\n                        group\r\n                        type=\"password\"\r\n                        validate\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center mt-4\">\r\n                      <MDBBtn outline color=\"info\" onClick={() => {\r\n                        const name = this.state.name;\r\n                        const password = this.state.password;\r\n                        const User = { password: password, name: name }\r\n                        this.loginUser(User)\r\n                      }}>\r\n                        Send\r\n              </MDBBtn>\r\n                    </div>\r\n                  </form>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n        <LightBox allinfo={this.state.banner} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Login;"," import React from 'react'\r\n import { ListGroupItem  } from 'reactstrap';\r\n\r\n function SingleUser({userName}) {\r\n     return (\r\n         <div>\r\n              <ListGroupItem className=\"justify-content-between\">{userName}  </ListGroupItem>\r\n              \r\n         </div>\r\n     )\r\n }\r\n export default SingleUser","import React from 'react'\r\nimport SingleUser from '../SingleUser/SingleUser'\r\nimport { ListGroup } from 'reactstrap';\r\n\r\n function OnlineList({onlineUsers}) {\r\n     console.log(onlineUsers)\r\n    return (\r\n        <div>    \r\n    <ListGroup>\r\n       {\r\n           onlineUsers ?onlineUsers.map((user,index ) =>{\r\n               return (\r\n                   <SingleUser\r\n                   userName = {user}\r\n                   key={index}\r\n                   />\r\n               )\r\n           }):''\r\n       }\r\n           </ListGroup>\r\n        </div>\r\n    )\r\n}\r\nexport default OnlineList","import React, { Component } from 'react'\r\nimport {  Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport OnlineList from '../../Components/OnlineList/OnlineList';\r\nimport { MDBBtn } from 'mdbreact';\r\n\r\nexport default class ModalUsers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          modal: false,     \r\n        };      \r\n      }\r\n    render() {\r\n        const {\r\n            openModal,\r\n            onlineUsers,\r\n            toggle\r\n        } = this.props\r\n        return (\r\n            <div>     \r\n            <Modal isOpen={openModal} toggle={ toggle} >\r\n              <ModalHeader toggle={ toggle}>Online Users</ModalHeader>\r\n              <ModalBody>\r\n\r\n              <OnlineList onlineUsers = { onlineUsers}/>    \r\n                \r\n            </ModalBody>\r\n              <ModalFooter>          \r\n              <MDBBtn outline color=\"info\"  \r\n                      onClick={ toggle}>\r\n                close \r\n              </MDBBtn>\r\n               </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport socketIOClient from 'socket.io-client';\r\nimport { MSG } from '../../Events'\r\nimport { Chat } from '@progress/kendo-react-conversational-ui';\r\nimport \"./Chat.css\"\r\nimport ModalUsers from '../../Components/ModalUsers/ModalUsers';\r\n\r\nclass Chat1 extends Component {\r\n    // endpoint   = 'http://localhost:8080';\r\n      endpoint = window.location.origin;  // heroku path\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      messages: [],\r\n      userName: localStorage.getItem(\"userdetails\"),\r\n      onlineUsers: [],\r\n     \r\n     \r\n    };\r\n    // this.name = props.name;  // for chat \r\n    const id = Math.random().toString().split('.')[1];\r\n    this.user = { id: id, name: this.state.userName };\r\n    this.addNewMessage = this.addNewMessage.bind(this);  \r\n  }\r\n\r\n componentDidMount =   ( ) => {\r\n  this.socket = socketIOClient(this.endpoint);\r\n   this.joinChat();\r\n\r\n   //msg recived from socket and display to user.\r\n  this.socket.on(\"new message\", data => { \r\n    const arr = [...this.state.messages]  ; \r\n    let Message = {\r\n       author: data.author,\r\n     timestamp: new Date(),\r\n      text: data.text,\r\n     };\r\n     arr.push(Message)  \r\n     this.setState({ messages: arr })\r\n  });\r\n}\r\n\r\n   // user join the chat socket send\r\n joinChat(){\r\n  this.socket\r\n    .emit('new user',   this.state.userName )\r\n\r\n    this.socket\r\n    .on('get users', data => {  \r\n      this.setState({ onlineUsers: data  });\r\n    });\r\n}\r\n  //user pressed on send message!\r\n  addNewMessage = (event) => {\r\n    let obj = Object.assign({}, event.message);\r\n    obj.author = this.user   \r\n    this.socket\r\n    .emit('send message',\r\n    obj \r\n    );\r\n  };\r\n\r\n//close connnection when page die\r\ncomponentWillUnmount(){\r\n  this.socket.close();\r\n}\r\n\r\n  render() {\r\n \r\n    const {\r\n      openModal,\r\n      toggle,\r\n    } = this.props;\r\n   \r\n    return (\r\n      <div  >\r\n          <ModalUsers openModal={openModal} onlineUsers={ this.state.onlineUsers} toggle={toggle} />   \r\n         \r\n         <div className=\"a\">\r\n          <div className=\"h4\">\r\n          <h4>{ 'Hello ' + this.state.userName}</h4>\r\n            </div> \r\n        \r\n          <div className=\"chat\">\r\n          <Chat\r\n            messages={this.state.messages}\r\n            onMessageSend={this.addNewMessage}\r\n            placeholder={\"Type a message...\"} \r\n            >\r\n          </Chat>\r\n          </div>   \r\n          </div> \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Chat1;","\r\nexport async function PostDataToMongo(mainInfo,url){\r\nreturn   fetch(url , {\r\n  method: 'POST', \r\n  body: JSON.stringify(mainInfo),  \r\n  headers:{\r\n    'Content-Type': 'application/json'\r\n  }\r\n}).then(res => res.json())\r\n  .then(response =>  response )\r\n\r\n}\r\n\r\n \r\nexport async function getDataFromMongo(user,url){\r\n  const auth = `Basic ${ btoa(`${user.email}:${user.password}`)}`;\r\n\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: new Headers({\r\n        Authorization: auth\r\n    })\r\n}).then(res => res.json())\r\n    .then(res => {\r\n        if (res.autorized) {\r\n      return   res\r\n        }\r\n    })\r\n    .catch(err => console.log('No Authrization'));\r\n}\r\n ","import React, { Component } from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport LightBox from '../../Components/LightBox/LightBox'\r\nimport { PostDataToMongo } from '../../Container/MainApp/PostData'\r\nimport  * as Events   from '../../Events'\r\nimport './Register.css'\r\n class Register extends Component {\r\n serverUrl   = window.location.origin;\r\n// serverUrl   = 'http://localhost:8080';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {     \r\n      banner : {\r\n        show: false, msgToUser: \"\", color: ''   \r\n      }\r\n      \r\n    };\r\n  }\r\n  name = React.createRef();\r\n  pass = React.createRef();\r\n  rePass = React.createRef();\r\n\r\n\r\n  displayLightBox = (msgToUser,color) => {\r\n    const banner = { show: true, msgToUser, color};\r\n    this.setState({ banner });\r\n    this.bannerTimeOut = setTimeout(() => {\r\n        const banner = { show: false, msgToUser: \"\", color: null };\r\n        this.setState({ banner })\r\n    }, 3000);\r\n}\r\n// user register\r\n  clickedRegister = async (obj) => {\r\n  \r\n    const url = this.serverUrl + \"/users/register\";\r\n    let resultRegsiter = await PostDataToMongo(obj, url)\r\n \r\n    if (resultRegsiter.info === Events.MISSING_INPUT) {\r\n      this.displayLightBox(resultRegsiter.info, Events.FALSE)\r\n    }\r\n    if (resultRegsiter.info === Events.PASSWORD_LENGTH) {\r\n      this.displayLightBox(resultRegsiter.info, Events.FALSE)\r\n    }\r\n    if (resultRegsiter.info === Events.PASSWORD_MATCH) {\r\n      this.displayLightBox(resultRegsiter.info, Events.FALSE)\r\n    }\r\n\r\n    if (resultRegsiter.info === Events.USER_EXITS) {\r\n      this.displayLightBox(resultRegsiter.info, Events.FALSE)\r\n    }\r\n    if (resultRegsiter.info === Events.YOURE_IN) {\r\n      this.displayLightBox(resultRegsiter.info,'1')\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.bannerTimeOut);\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"divRegister\">\r\n          <MDBCard className=\"cardRegsiter\">\r\n            <MDBCardBody>\r\n              <form>\r\n                <p className=\"h4 text-center py-4\">Sign up</p>\r\n                <div className=\"grey-text\">\r\n                  <MDBInput\r\n                    label=\"Your name\"\r\n                    icon=\"user\"\r\n                    group\r\n                    type=\"text\"\r\n                    validate\r\n                    error=\"wrong\"\r\n                    success=\"right\"\r\n                  />\r\n                  <MDBInput\r\n                     ref={this.pass}\r\n                      label=\"Your password\"\r\n                    icon=\"envelope\"\r\n                    group\r\n                    type=\"email\"\r\n                    validate\r\n                    error=\"wrong\"\r\n                    success=\"right\"\r\n                  />\r\n                  <MDBInput\r\n                   ref={this.rePass}\r\n                 \r\n                    label=\"Confirm Your password\"\r\n                    icon=\"lock\"\r\n                    group\r\n                    type=\"password\"\r\n                    validate\r\n                  />\r\n                </div>\r\n                <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn onClick={ ()=> {            \r\n                let name = this.name.current.state.innerValue;       \r\n                let pass = this.pass.current.state.innerValue;\r\n                let rePass =this.rePass.current.state.innerValue;\r\n                const obj = {name :name ,pass:pass,rePass:rePass}\r\n                this.clickedRegister(obj)}}\r\n                  type=\"button\"\r\n                  gradient=\"blue\"\r\n                  rounded\r\n                  className=\"btn-block z-depth-1a\"\r\n                >\r\n                  Sign in\r\n                </MDBBtn>\r\n                </div>\r\n              </form>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n    <LightBox allinfo={this.state.banner} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register;","\r\nimport React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport './NavBar.css'\r\nimport {Collapse,Navbar,NavbarToggler,NavbarBrand, Nav,NavItem,} from 'reactstrap';\r\nimport { MDBIcon } from 'mdbreact';\r\n \r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n     \r\n    };\r\n  }\r\n  \r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      ifUserLoggedIn,\r\n       userLoggedOut,   \r\n      openModalBtn,\r\n      usersLength\r\n    } = this.props;\r\n\r\n    const linkName = ifUserLoggedIn ? \"Logout\" : \"Login\";\r\n     \r\n    return (\r\n      <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Chat App</NavbarBrand>\r\n         {ifUserLoggedIn ? \r\n          <div className=\"container2\">\r\n          <div onClick={openModalBtn}  className=\"btn btn-two\">\r\n            <span>{usersLength} Onlinsse Users</span>\r\n          </div>\r\n        </div>:[]}  \r\n\r\n     \r\n      \r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n       <div className=\"allItems\">\r\n            <NavItem> \r\n               <Link     to=\"/\" onClick={userLoggedOut}>  \r\n               <MDBIcon icon=\"arrow-circle-right mdb-gallery-view-icon\" />\r\n               {linkName}</Link>       \r\n           </NavItem>\r\n              <NavItem>   \r\n                  <Link to=\"/Register/\">\r\n                  <MDBIcon icon=\"child mdb-gallery-view-icon\" />\r\n                    Register</Link>    \r\n              </NavItem>\r\n              \r\n          \r\n             </div>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default NavBar;\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport Login from '../../Container/Login/Login'\r\nimport Chat from '../Chat/Chat'\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport Register from '../Register/Register'\r\nimport NavBar from '../../Components/NavBar/NavBar'\r\nimport socketIOClient from 'socket.io-client';\r\nimport { func } from 'prop-types';\r\n\r\nclass MainApp extends Component {\r\n\r\n // endpoint = 'http://localhost:8080';//socket\r\n  \r\n  endpoint = window.location.origin;  //socket\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '', //user name\r\n      socket:'',\r\n      modal: false,   //modal open or close\r\n      ifUserLoggedIn: localStorage.getItem(\"ifOnline\") || false,\r\n      // display warning for users\r\n      box: {\r\n        show: false, msgToUser: \"\"\r\n      },\r\n      socket:'',\r\n      numOfUers:0\r\n    };\r\n    this.toggle = this.toggle.bind(this); // for modal \r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n   const socket = socketIOClient(this.endpoint);\r\n   socket\r\n   .on('get users', data => {  \r\n     this.setState({ numOfUers: data.length  });\r\n   });\r\n   this.setState({socket:socket})\r\n\r\n  }\r\n  toggle() {\r\n    this.setState({ modal: false })\r\n  }\r\n \r\n  openModalBtn = () => { \r\n    this.setState({ modal: true })\r\n  }\r\n\r\n\r\n  userLoggedIn = (name) => {\r\n    let ifOnline = true;\r\n    localStorage.setItem('userdetails', name);\r\n    localStorage.setItem('ifOnline', ifOnline);\r\n    this.setState({ ifUserLoggedIn: true, name: name,numOfUers:this.state.numOfUers++ })\r\n\r\n  }\r\n\r\n\r\n  userLoggedOut =  () => {\r\n \r\n   \r\n    this.state.socket\r\n    .emit('log out', { user: this.state.name })\r\n    localStorage.removeItem(\"userdetails\");\r\n    localStorage.removeItem(\"ifOnline\");\r\n\r\n    this.setState({ ifUserLoggedIn: false, name: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <NavBar\r\n           ifUserLoggedIn={this.state.ifUserLoggedIn}\r\n           userLoggedOut={this.userLoggedOut}\r\n           openModalBtn={this.openModalBtn}\r\n           usersLength={this.state.numOfUers}\r\n             />\r\n          <Route path=\"/Register/\" exact render={() => <Register\r\n            clickedRegister={this.clickedRegister}\r\n             allinfo={this.state.box}\r\n              />} />\r\n\r\n          <Route path=\"/Chat/\" exact render={() => <Chat  \r\n           displayLength={this.displayLength}\r\n           openModal={this.state.modal}\r\n            toggle={() => this.toggle()} />} />\r\n\r\n          <Route path=\"/\" exact render={() => (\r\n            this.state.ifUserLoggedIn ? (<Redirect to='/Chat/' />) :\r\n              (<Login userLoggedIn={this.userLoggedIn} />)\r\n\r\n          )} />\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default MainApp;","import React from 'react';\n \nimport './App.css';\nimport MainApp from './Container/MainApp/MainApp'\nfunction App() {\n  return (\n    <div className=\"App\">\n  <MainApp/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n    MSG:\"MSG\",\r\n    LOGIN:\"LOGIN\",\r\n    MISSING_INPUT:\"misssing inputs\",\r\n    PASSWORD_LENGTH:\"Password must be 8 digits\",\r\n    PASSWORD_MATCH:\"Password doesnt match\",\r\n    USER_EXITS:\"user exits\",\r\n    YOURE_IN:\"Youre In\",\r\n    FALSE:\"0\",\r\n}"],"sourceRoot":""}